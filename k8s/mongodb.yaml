apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
type: Opaque
data:
  root-password: $(echo -n "secure_root_pass" | base64)
  app-password: $(echo -n "secure_app_pass" | base64)
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
spec:
  serviceName: mongodb
  replicas: 3
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
      - name: mongodb
        image: mongo:5.0
        args: ["--auth", "--replSet", "rs0"]
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_PASSWORD_FILE
          value: "/run/secrets/mongo_root_password"
        - name: MONGO_USER
          value: "app_user"
        volumeMounts:
        - name: secrets
          mountPath: /run/secrets
          readOnly: true
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi" 
            cpu: "1"
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: mongodb-pvc
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "ssd-sc"
      resources:
        requests:
          storage: 10Gi
      volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017
  type: ClusterIP
