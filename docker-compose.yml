services:
  mongo:
    image: mongo:6.0.12
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: admin
    healthcheck:
      test: ["CMD", "mongosh", "--host", "mongo", "--eval", "db.adminCommand('ping')", "--username", "admin", "--password", "admin123", "--authenticationDatabase", "admin", "--quiet"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:3.4
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:3.8
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  # api:
  #   build:
  #     context: .
  #     dockerfile: api/Dockerfile
  #   ports:
  #     - "5000:5000"
  #   environment:
  #     MONGO_URI: mongodb://appuser:appuser123@mongo:27017/taskdb?authSource=admin&retryWrites=true&w=majority&connectTimeoutMS=5000
  #     DEPLOY_MODE: docker
  #   depends_on:
  #     - mongo

  # scheduler:
  #   build:
  #     context: .
  #     dockerfile: scheduler/Dockerfile.scheduler
  #   environment:
  #     MONGO_URI: mongodb://appuser:appuser123@mongo:27017/taskdb?authSource=admin&retryWrites=true&w=majority
  #     KUBECONFIG: ~/.kube/config
  #   volumes:
  #     - ~/.kube:~/.kube
  #     - ~/.minikube:~/.minikube
  #     - /etc/localtime:/etc/localtime:ro
  #     - /etc/timezone:/etc/timezone:ro
  #   depends_on:
  #     mongo:
  #       condition: service_healthy

